openapi: 3.0.3
info:
  title: GPA Calculator API
  description: A REST API for managing courses and calculating GPA for students.
  version: 1.0.0
servers:
  - url: /api
    description: Local development server
  - url: https://gpa-calculator.vercel.app/api
    description: Production server
security:
  - ApiKeyAuth: []
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    Course:
      type: object
      required:
        - name
        - grade
        - credits
      properties:
        name:
          type: string
          example: Math 101
          description: Course name
        grade:
          type: string
          enum: [A, B, C, D, F]
          example: A
          description: Course grade
        credits:
          type: number
          format: float
          minimum: 0
          example: 3
          description: Course credits
        points:
          type: number
          format: float
          example: 12
          description: Grade points (grade value * credits, e.g., A=4.0 * 3 = 12)
      additionalProperties: false
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          example: 400
        message:
          type: string
          example: Invalid grade provided
    GpaResult:
      type: object
      required:
        - gpa
      properties:
        gpa:
          type: number
          format: float
          example: 3.50
          description: Calculated GPA
paths:
  /courses:
    post:
      summary: Add a new course
      description: Adds a course with name, grade, and credits to the user's course list.
      operationId: addCourse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '201':
          description: Course added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized (missing or invalid API key)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Retrieve all courses
      description: Returns the list of all courses for the user.
      operationId: getCourses
      responses:
        '200':
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Clear all courses
      description: Deletes all courses for the user, resetting the course list.
      operationId: clearCourses
      responses:
        '204':
          description: Courses cleared successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /gpa:
    get:
      summary: Calculate GPA
      description: Calculates the GPA based on all stored courses.
      operationId: calculateGpa
      responses:
        '200':
          description: GPA calculated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GpaResult'
        '400':
          description: No courses available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'